kind: Deployment
apiVersion: apps/v1
metadata:
  name: druid-broker
  labels:
    app: druid
    component: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: druid
      component: broker
      release: druid
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: druid
        component: broker
        release: druid
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /status/health
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: druid
          livenessProbe:
            httpGet:
              path: /status/health
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DRUID_MAXDIRECTMEMORYSIZE
              value: 400m
            - name: DRUID_XMS
              value: 512m
            - name: DRUID_XMX
              value: 512m
            - name: druid_processing_buffer_sizeBytes
              value: '50000000'
            - name: druid_processing_numMergeBuffers
              value: '2'
            - name: druid_processing_numThreads
              value: '1'
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: druid
          image: 'image-registry.openshift-image-registry.svc:5000/apache-druid/druid@sha256:494bb85c6f5aeff96012466c34656cb54b8aded0b616b73d17fcd9b2d3996e85'
          args:
            - broker
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst      
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
